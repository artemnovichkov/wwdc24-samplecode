#usda 1.0
(
    defaultPrim = "Root"
    metersPerUnit = 1
    upAxis = "Y"
)

def Xform "Root"
{
    def Material "Material"
    {
        asset inputs:leftEye = @Placeholder_L.png@ (
            colorSpace = "Input - Texture - sRGB - sRGB"
            customData = {
                dictionary realitykit = {
                    float2 positionInSubgraph = (-1135.6725, 25.603577)
                    float2 sizeInSubgraph = (115.5, 53)
                    int stackingOrderInSubgraph = 839
                }
            }
        )
        asset inputs:rightEye = @Placeholder_R.png@ (
            colorSpace = ""
            customData = {
                dictionary realitykit = {
                    float2 positionInSubgraph = (-1137.3615, 158.29971)
                    float2 sizeInSubgraph = (119.5, 53)
                    int stackingOrderInSubgraph = 839
                }
            }
        )
        token outputs:mtlx:surface.connect = </Root/Material/RealityKit_Unlit_Surface.outputs:out>
        token outputs:realitykit:vertex
        float2 ui:nodegraph:realitykit:subgraphOutputs:pos = (295.03998, 167.7462)
        float2 ui:nodegraph:realitykit:subgraphOutputs:size = (181.5, 99)
        int ui:nodegraph:realitykit:subgraphOutputs:stackingOrder = 224

        def Shader "RealityKit_Unlit_Surface" (
            active = true
        )
        {
            uniform token info:id = "ND_realitykit_unlit_surfaceshader"
            bool inputs:applyPostProcessToneMap
            color3f inputs:color.connect = </Root/Material/eyeSwitch.outputs:out>
            bool inputs:hasPremultipliedAlpha
            float inputs:opacity
            float inputs:opacityThreshold
            token outputs:out
            float2 ui:nodegraph:node:pos = (-102.90098, 187.08916)
            float2 ui:nodegraph:node:size = (203.5, 181)
            int ui:nodegraph:node:stackingOrder = 838
        }

        def Shader "UsdUVTexture2"
        {
            uniform token info:id = "ND_UsdUVTexture"
            asset inputs:file.connect = </Root/Material.inputs:rightEye>
            string inputs:wrapS
            string inputs:wrapT
            float outputs:b
            float outputs:g
            float outputs:r
            color3f outputs:rgb
            color4f outputs:rgba
            float2 ui:nodegraph:node:pos = (-915.3085, 226.98972)
            float2 ui:nodegraph:node:size = (149.5, 217)
            int ui:nodegraph:node:stackingOrder = 1100
            string[] ui:nodegraph:realitykit:node:attributesShowingChildren = []
        }

        def Shader "UsdUVTexture_1"
        {
            uniform token info:id = "ND_UsdUVTexture"
            asset inputs:file.connect = </Root/Material.inputs:leftEye>
            color4f inputs:scale
            float2 inputs:st
            string inputs:wrapS
            color3f outputs:rgb
            float2 ui:nodegraph:node:pos = (-746.4219, 8.082031)
            float2 ui:nodegraph:node:size = (154, 217)
            int ui:nodegraph:node:stackingOrder = 833
            string[] ui:nodegraph:realitykit:node:attributesShowingChildren = ["outputs:rgba"]
        }

        def Shader "eyeSwitch"
        {
            uniform token info:id = "ND_realitykit_geometry_switch_cameraindex_color3"
            color3f inputs:left.connect = </Root/Material/UsdUVTexture_1.outputs:rgb>
            color3f inputs:mono.connect = </Root/Material/UsdUVTexture2.outputs:rgb>
            color3f inputs:right.connect = </Root/Material/UsdUVTexture2.outputs:rgb>
            color3f outputs:out
            float2 ui:nodegraph:node:pos = (-392.10938, 84.51953)
            float2 ui:nodegraph:node:size = (208, 145)
            int ui:nodegraph:node:stackingOrder = 956
        }
    }
}

