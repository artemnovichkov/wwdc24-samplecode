/*
See the LICENSE.txt file for this sampleâ€™s licensing information.

Abstract:
The declaration of CreatingMIDIDriverSampleAppDriver, which sets up and manages
     the communications between user clients and the MIDI device.
*/

#ifndef TestMIDIDriver_h
#define TestMIDIDriver_h

#include <Availability.h>
#include <DriverKit/IOService.iig>
#include <MIDIDriverKit/IOUserMIDIDriver.iig>

using namespace MIDIDriverKit;

class CreatingMIDIDriverSampleAppDriver : public IOUserMIDIDriver
{
public:
	virtual bool init() override;
	virtual void free() override;

	virtual kern_return_t Start(IOService* provider) override;
	virtual kern_return_t Stop(IOService* provider) override;

	virtual kern_return_t NewUserClient(uint32_t type, IOUserClient** userClient) override;

	virtual kern_return_t StartIO(OSArray* deviceList) override;
	virtual kern_return_t StopIO() override;

	// user client actions
	kern_return_t HandleAddPort() LOCALONLY;
	kern_return_t HandleRemovePort() LOCALONLY;
	kern_return_t HandleToggleOffline() LOCALONLY;

};

#endif /* TestMIDIDriver_h */
